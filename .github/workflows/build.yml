# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  webui:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: 'webui/package-lock.json'
    - run: cd webui && npm install
    - run: cd webui && npm run build

  ccheck:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: ccheck
      run: |
        make ccheck

  build:
    runs-on: ${{ matrix.os }}
    needs: webui
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-latest]
    env:
      MACOSX_DEPLOYMENT_TARGET: "10.10"
    steps:
    - uses: actions/checkout@v2
    - name: install clang-12
      run: |
        sudo apt-get update && sudo apt-get install -y clang-tidy-12 clang-12 clang-tools-12

    - uses: actions/cache@v2
      with:
        path: third_party
        key: ${{ runner.os }}-${{ hashFiles('versions.mk') }}

    - name: make info
      run: |
        echo "OS: ${{ matrix.os }}"
        echo "--- make info ---"
        make info

    - name: make StudioLink - Linux
      if: ${{ runner.os == 'Linux' }}
      run: make clean && make CC=clang-12 && make test

    - name: clang-tidy
      if: ${{ runner.os == 'Linux' }}
      run: |
        clang-tidy-12 -checks=cert-\*,-cert-dcl37-c,-cert-dcl51-cpp,-clang-analyzer-valist.Uninitialized src/**/*.c
        clang-tidy-12 -checks=cert-\*,-cert-dcl37-c,-cert-dcl51-cpp,-clang-analyzer-valist.Uninitialized tests/**/*.c

    - name: clang scan-build
      if: ${{ runner.os == 'Linux' }}
      run: make clean && scan-build-12 make libsl.a

    - name: make StudioLink - macOS
      if: ${{ runner.os == 'macOS' }}
      run: make clean && make && make test

