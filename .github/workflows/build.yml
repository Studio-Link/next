name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  webui:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: 'webui/package-lock.json'
    - name: build 
      run: |
        cd webui && npm install && npm run build && cd ..
        zip -r webui.zip webui/dist
    - uses: actions/upload-artifact@v2
      with:
        name: webui
        path: webui.zip
        retention-days: 1

  ccheck:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: ccheck
      run: |
        make ccheck

  build:
    runs-on: ${{ matrix.os }}
    needs: webui
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-latest]
    env:
      MACOSX_DEPLOYMENT_TARGET: "10.10"
    steps:
    - uses: actions/checkout@v2

    - name: install clang-13
      if: ${{ runner.os == 'Linux' }}
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        sudo add-apt-repository "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main"
        sudo apt-get update && sudo apt-get install -y clang-tools-13 clang-13 clang-tidy-13

    - name: websocat linux
      if: ${{ runner.os == 'Linux' }}
      run: |
        wget https://github.com/vi/websocat/releases/download/v1.9.0/websocat_linux64
        mv websocat_linux64 /usr/local/bin/websocat
        chmod +x /usr/local/bin/websocat

    - name: websocat macos
      if: ${{ runner.os == 'macOS' }}
      run: |
        wget https://github.com/vi/websocat/releases/download/v1.9.0/websocat_mac
        mv websocat_mac /usr/local/bin/websocat
        chmod +x /usr/local/bin/websocat

    - uses: actions/cache@v2
      with:
        path: third_party
        key: ${{ runner.os }}-${{ hashFiles('versions.mk') }}

    - uses: actions/download-artifact@v2
      with:
        name: webui

    - name: unzip webui
      run: rm -Rf webui && unzip webui.zip

    - name: make info
      run: |
        echo "OS: ${{ matrix.os }}"
        echo "--- make info ---"
        make info

    - name: make StudioLink - Linux
      if: ${{ runner.os == 'Linux' }}
      run: make CC=clang-13 && make test

    - name: clang-tidy
      if: ${{ runner.os == 'Linux' }}
      run: |
        clang-tidy-13 -checks=cert-\*,-cert-dcl37-c,-cert-dcl51-cpp,-clang-analyzer-valist.Uninitialized libsl/src/*.c
        clang-tidy-13 -checks=cert-\*,-cert-dcl37-c,-cert-dcl51-cpp,-clang-analyzer-valist.Uninitialized test/src/*.c

    - name: clang scan-build
      if: ${{ runner.os == 'Linux' }}
      run: make clean && scan-build-13 make libsl.a

    - name: make StudioLink - macOS
      if: ${{ runner.os == 'macOS' }}
      run: make && make test

